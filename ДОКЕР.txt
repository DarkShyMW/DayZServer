На машинах WEB-L и WEB-R
1. Скачиваем Docker и распаковываем веб-приложение

	mkdir /opt/docker
	mount /dev/cdrom /mnt - монтируем специальный образ с Docker и приложением
	cp /mnt/* /opt/docker - копируем содержимое диска

	cd /opt/docker
	gunzip appdockerdemo.tar.gz - распаковываем из формата .gz
	tar -xvf appdockerdemo.tar - распаковываем из формата .tar
	ls - должны появиться 2 файла: Readme.txt (с инструкцией по работе приложения) и appdocker0.zip (само приложение)

	umount /mnt - размонтируем спец. образ и вставляем обратно наш BD-1

2. Устанавливаем Docker и nginx (находясь в каталоге, куда всё копировали)

	dpkg -i containerd* - первый пакет
	dpkg -i docker* - остальные пакеты для Docker
	docker version - если команда отработала, Docker установлен и работает!

	apt install nginx - ставим nginx
	nginx -t - проверяем работоспособность

3. Добавляем контейнер веб-приложения в Docker и запускаем его

	docker image load -i appdocker0.zip - загружаем образ веб-приложения в Docker
	docker image ls - убеждаемся, что образ загрузился

	docker run -d appdocker0:latest - запускаем контейнер из нашего образа
	docker ps - убеждаемся, что контейнер запущен. Контейнеру присваивается уникальное имя по-умолчанию, необходимо его запомнить

	Необходимо выяснить, какой ip-адрес получил наш контейнер. Адреса контейнеры получают из общей сети по-умолчанию "bridge"
	с адресом 172.17.0.0/16
	docker container inspect <container_name> - внизу будет строчка с IP-адресом (скорее всего 172.17.0.2)
		или более простая команда
	docker network inspect bridge -f '{{json .Containers}}' | json_pp - позволяет отобразить все контейнеры и их адреса в сети bridge

	curl http://<container_ip_address>:5000/get - проверка работоспособности веб-приложения. Должны появиться 3 сообщения

4. Настраиваем nginx

	cd /etc/nginx
	rm -f sites-enabled/default - отключаем веб-сайт по-умолчанию
	vim sites-available/webapp.conf - создаём файл конфигурации и приводим к следующему виду:

########
server {
	listen 80;
	server_name www.demo.wsr;
location / {
		proxy_pass http://<container_ip_address>:5000; - проксируем все запросы в наш контейнер
	}
}
########

	ln -s /etc/nginx/sites-available/webapp.conf /etc/nginx/sites-enabled/webapp.conf - включаем сайт
	nginx -t - проверяем конфигурацию. Если ошибка - исправляем!
	service nginx restart

	Все эти команды должны успешно отработать после проделанной настройки:
	curl (lynx) http://127.0.0.1
	curl (lynx) http://127.0.0.1/health
	curl (lynx) http://127.0.0.1/get

5. На всех остальных машинах должно работать:

	www.demo.wsr - через браузер Firefox, Edge или с помощью curl и lynx

	*! Не забываем выполнить проброс портов для nginx на RTR-R и RTR-L
